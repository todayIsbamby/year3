# -*- coding: utf-8 -*-
"""Lab2_3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-gpJJDYdIrehNf4KdMbe5bsPH0Jx2VKA
"""

import cv2
import numpy as np
from matplotlib import pyplot as plt
from google.colab.patches import cv2_imshow

original_image = cv2.resize(cv2.imread('/content/pic7.png'),(400,400))
template_image = cv2.resize(cv2.imread('/content/pic8.png'),(400,400))
# original_image = cv2.cvtColor(original_image,cv2.COLOR_BGR2RGB)
# template_image = cv2.cvtColor(template_image,cv2.COLOR_BGR2RGB)

fig = plt.figure(figsize=(10,10))

def create_histogram_match_table(original_cdf, template_cdf):
    table = np.zeros(256, dtype=np.uint8)
    for i in range(256):
        diff = np.abs(original_cdf[i] - template_cdf)
        min_diff_index = np.argmin(diff)
        table[i] = min_diff_index
    return table

def get_hist(img):
  nbins = 256
  ranges = [0, 256]
  hist_r = cv2.calcHist([img[:,:,2]], [0], None, [nbins], ranges, accumulate=False)
  hist_g = cv2.calcHist([img[:,:,1]], [0], None, [nbins], ranges, accumulate=False)
  hist_b = cv2.calcHist([img[:,:,0]], [0], None, [nbins], ranges, accumulate=False)
  return hist_r,hist_g,hist_b

def get_pdf(hist_r,hist_g,hist_b):
  pdf_r = hist_r / hist_r.sum()
  pdf_g = hist_g / hist_r.sum()
  pdf_b = hist_b  / hist_r.sum()
  return pdf_r,pdf_g,pdf_b

def get_cdf(hist_r,hist_g,hist_b):
  cdf_r = np.cumsum(hist_r)
  cdf_g = np.cumsum(hist_g)
  cdf_b = np.cumsum(hist_b)
  # print("r",cdf_r[-1])
  # print("g",cdf_g[-1])
  # print("b",cdf_b[-1])
  return cdf_r,cdf_g,cdf_b

def plot_rgb(r,g,b,title,h,w,i):
  fig.add_subplot(h,w,i)
  plt.plot(r,color='r')
  plt.plot(g,color='g')
  plt.plot(b,color='b')
  plt.title(title)

def histogram_matching(original_image, template_image):
  ori_his_r, ori_his_g, ori_his_b = get_hist(original_image)
  temp_his_r,temp_his_g,temp_his_b = get_hist(template_image)

  ori_pdf_r,ori_pdf_g,ori_pdf_b = get_pdf(ori_his_r, ori_his_g, ori_his_b)
  temp_pdf_r,temp_pdf_g,temp_pdf_b = get_pdf(temp_his_r,temp_his_g,temp_his_b)

  ori_cdf_r,ori_cdf_g,ori_cdf_b = get_cdf(ori_pdf_r,ori_pdf_g,ori_pdf_b)
  temp_cdf_r,temp_cdf_g,temp_cdf_b = get_cdf(temp_pdf_r,temp_pdf_g,temp_pdf_b)

  red_table = create_histogram_match_table(ori_cdf_r, temp_cdf_r)
  green_table = create_histogram_match_table(ori_cdf_g, temp_cdf_g)
  blue_table = create_histogram_match_table(ori_cdf_b, temp_cdf_b)

  matched_image = np.copy(original_image)
  matched_image[:,:,2] = red_table[original_image[:,:,2]]
  matched_image[:,:,1] = green_table[original_image[:,:,1]]
  matched_image[:,:,0] = blue_table[original_image[:,:,0]]

  m_his_r,m_his_g,m_his_b = get_hist(matched_image)
  m_pdf_r,m_pdf_g,m_pdf_b = get_pdf(m_his_r,m_his_g,m_his_b)
  m_cdf_r,m_cdf_g,m_cdf_b = get_cdf(m_pdf_r,m_pdf_g,m_pdf_b)

  plot_rgb(ori_pdf_r,ori_pdf_g,ori_pdf_b,"ori pdf",3,3,2)
  plot_rgb(ori_cdf_r,ori_cdf_g,ori_cdf_b,"ori cdf",3,3,3)
  plot_rgb(temp_pdf_r,temp_pdf_g,temp_pdf_b,"temp pdf",3,3,5)
  plot_rgb(temp_cdf_r,temp_cdf_g,temp_cdf_b,"temp cdf",3,3,6)
  plot_rgb(m_pdf_r,m_pdf_g,m_pdf_b,"matched pdf",3,3,8)
  plot_rgb(m_cdf_r,m_cdf_g,m_cdf_b,"matched cdf",3,3,9)

  cv2.imwrite("matche_4_5.jpg", matched_image)
  return matched_image


# Perform histogram matching
matched_image = histogram_matching(original_image,template_image)

# Display the original, template, and matched images
fig.add_subplot(3, 3, 1)
plt.imshow(cv2.cvtColor(original_image, cv2.COLOR_BGR2RGB))
plt.title('Original Image')

fig.add_subplot(3, 3, 4)
plt.imshow(cv2.cvtColor(template_image, cv2.COLOR_BGR2RGB))
plt.title('Template Image')

fig.add_subplot(3, 3, 7)
plt.imshow(cv2.cvtColor(matched_image, cv2.COLOR_BGR2RGB))
plt.title('Matched Image')

fig.tight_layout()
plt.show()